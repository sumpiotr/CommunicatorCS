<Window x:Class="Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client"
        mc:Ignorable="d"
        Icon="/Images/message-window-icon.png"
        WindowStartupLocation="CenterScreen"
        Title="CS Communicator" Height="750" Width="1200" ResizeMode="CanMinimize" Closing="Window_Closing">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="VisibilityBooleanConverter"/>

        <Style x:Key="GoBackStyle" TargetType="Button">
            <Setter Property="FlowDirection" Value="LeftToRight"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="GoBackBorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#70C6E5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Animations -->
        <Style x:Key="BaseAnimationsStyle" TargetType="Border">
            <Style.Triggers>
                <Trigger Property="FrameworkElement.Visibility" Value="Visible">
                    <Trigger.EnterActions>
                        <!-- this works -->
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">

                </Trigger>
                <Trigger Property="IsPressed" Value="True">

                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">

                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="#D7D5D9"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="TextDecorations" Value="Underline"/>-->
                    <Setter Property="Foreground" Value="#70C6E5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#2F3136"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SendTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#70C6E5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

        <Style x:Key="ClientsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NewMessageListBoxTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>-->
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>-->
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>-->
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="SettingsButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="#70C6E5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="#70A6C5"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Control colors.-->
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#46494F</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">#46494F</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="black"
                Offset="1" />
        </LinearGradientBrush>

        <Color x:Key="ProgressBarIndicatorAnimatedFill">gray</Color>

        <Style x:Key="ScrollBarLineButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border"
                Margin="0,-1,0,0"
                CornerRadius="0"
                BorderThickness="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#202225"/>
                                            <GradientStop Color="#202225"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#46494F" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{Binding Content, 
            RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="white"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="#46494F" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb"
       TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="IsTabStop"
          Value="false" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="0"
                Background="#2F3136"
                BorderBrush="#2F3136"
                BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                 TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
            CornerRadius="2"
            Background="#2F3136" />
                <RepeatButton Grid.Row="0"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineUpCommand"
                  Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
           Grid.Row="1"
           IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
               Margin="0,0,1,0">
                            <Thumb.BorderBrush>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.BorderBrush>
                            <Thumb.Background>

                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="Violet"
                                Offset="0.0" />
                                            <GradientStop Color="Violet"
                                Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2"
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}"
       TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
          Value="True" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
             Value="Vertical">
                    <Setter Property="Width"
              Value="15" />
                    <Setter Property="Height"
              Value="Auto" />
                    <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#2F3136" CornerRadius="7, 7, 8, 8" BorderBrush="DarkGray" BorderThickness="2" Opacity="0.96">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <StackPanel>
        <!--#region Login or Register -->
        <StackPanel Name="LoginOrRegisterStackPanel" Height="750" Width="1200" Orientation="Vertical"  Background="#595B5F" Visibility="Visible">
            <StackPanel Orientation="Horizontal"  Height="645">
                <Image Margin="120,195,75,135" Height="200" Source="/Images/main-avatar-icon.png" />

                <Border Margin="30,150,30,90" Height="300" Width="555" Background="#2F3136" CornerRadius="20">
                    <StackPanel VerticalAlignment="Center">
                        <Button Name="LoginButton" BorderThickness="0" Click="LoginButton_Click" Template="{DynamicResource ButtonBaseControlTemplate}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="#2F3136"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Image Width="105" Source="/Images/login-icon.png" />
                                <TextBlock Margin="15,0,0,0" FontWeight="Bold" FontSize="60" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle1}">Log in</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="RegisterButton" Click="RegisterButton_Click" Background="#2F3136" BorderThickness="0" Style="{DynamicResource ButtonStyle1}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Image Width="70" Source="/Images/register-icon.png" />
                                <TextBlock FontSize="30" VerticalAlignment="Center" Style="{DynamicResource TextBlockStyle1}">Register</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
            <Border Width="1200" Name="LoginOrRegisterErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}" Opacity="0">
                <TextBlock Name="LoginOrRegisterErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->

        <!--#region Login -->
        <StackPanel Name="LoginStackPanel" Height="750" Width="1200" Orientation="Vertical" Background="#595B5F" Visibility="Collapsed">
            <StackPanel Orientation="Horizontal" Height="645">
                <Border Background="#595B5F" Height="75" CornerRadius="25" VerticalAlignment="Top" BorderThickness="0" Margin="15" Style="{DynamicResource GoBackBorderStyle}">
                    <Button Click="GoBackButton_Click" Height="75" VerticalAlignment="Top" BorderThickness="0" Background="Transparent"  Style="{DynamicResource GoBackStyle}">
                        <Image Source="/Images/go-back-icon.png"/>
                    </Button>
                </Border>
                <Image Margin="15,195,75,135" Height="200" Source="/Images/main-avatar-icon.png" />
                <Border Margin="30,150,30,90" Height="300" Width="555" Background="#2F3136" CornerRadius="20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="225"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Margin="30,15,15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" FontSize="30" Grid.Column="0" Grid.Row="0">🙍‍♂️ Login:</TextBlock>
                        <TextBlock Margin="30,15,15,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#D7D5D9" FontSize="30" Grid.Column="0" Grid.Row="1">🔑 Password:</TextBlock>
                        <TextBox Margin="0,15,30,0" Padding="5" Width="270" FontSize="22" Height="45" TextAlignment="Center" Name="LoginTextBox" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" Background="#2F3136" BorderThickness="2" BorderBrush="#202225" Grid.Column="1" Grid.Row="0" Style="{DynamicResource TextBoxStyle1}"/>
                        <PasswordBox Margin="0,15,30,0"  Padding="5" Width="270" FontSize="22" Height="45" Name="UserPasswordBox" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" Background="#2F3136" BorderThickness="2" BorderBrush="#202225" Grid.Column="1" Grid.Row="1"/>
                        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Width="180" Height="52" BorderThickness="0" Background="#202225" CornerRadius="5">
                            <Button Margin="0,0,0,3" Width="120" Height="45"  BorderThickness="0" Background="#202225" x:Name="LoginUserButton" Click="LoginUserButton_Click" Style="{DynamicResource ButtonStyle2}">
                                <TextBlock FontSize="30" FontWeight="Bold" Style="{DynamicResource TextBlockStyle1}">Log in</TextBlock>
                            </Button>
                        </Border>
                    </Grid>
                </Border>
            </StackPanel>
            <Border Width="1200" Name="LoginErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}" >
                <TextBlock Name="LoginErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->

        <!--#region Register -->
        <StackPanel Name="RegisterStackPanel" Height="750" Width="1200" Orientation="Vertical"  Background="#595B5F" Visibility="Collapsed">
            <StackPanel Orientation="Horizontal" Height="645">
                <Button Click="GoBackButton_Click" Height="75" VerticalAlignment="Top" Margin="15" BorderThickness="0" Background="#595B5F"  Style="{DynamicResource GoBackStyle}">
                    <Image Source="/Images/go-back-icon.png"/>
                </Button>
                <Image Margin="15,195,75,135" Height="200" Source="/Images/main-avatar-icon.png" />
                <Border Margin="30,150,30,90" Height="300" Width="555" Background="#2F3136" CornerRadius="20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="225"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Margin="30,15,15,0" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" FontSize="30" Grid.Column="0" Grid.Row="0">🙍‍♂️ Register:</TextBlock>
                        <TextBlock Margin="30,15,15,0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#D7D5D9" FontSize="30" Grid.Column="0" Grid.Row="1">🔑 Password:</TextBlock>
                        <TextBox Name="RegisterUsernameTextBox" Margin="0,15,30,0" Padding="5" Width="270" FontSize="22" Height="45" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" Background="#2F3136" BorderThickness="2" BorderBrush="#202225" Grid.Column="1" Grid.Row="0" Style="{DynamicResource TextBoxStyle1}"/>
                        <PasswordBox Name="RegisterPasswordBox" Margin="0,15,30,0"  Padding="5" Width="270" FontSize="22" Height="45" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#D7D5D9" Background="#2F3136" BorderThickness="2" BorderBrush="#202225" Grid.Column="1" Grid.Row="1"/>
                        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Width="180" Height="52" BorderThickness="0" Background="#202225" CornerRadius="5">
                            <Button Margin="0,0,0,3" Width="120" Height="45"  BorderThickness="0" Background="#202225" x:Name="RegisterUserButton" Click="RegisterUserButton_Click" Style="{DynamicResource ButtonStyle2}">
                                <TextBlock FontSize="30" FontWeight="Bold" Style="{DynamicResource TextBlockStyle1}">Register</TextBlock>
                            </Button>
                        </Border>
                    </Grid>
                </Border>
            </StackPanel>
            <Border Width="1200" Name="RegisterErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}">
                <TextBlock Name="RegisterErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->

        <!--#region Main -->
        <DockPanel x:Name="MainDockPanel" Visibility="Collapsed">
            <Menu DockPanel.Dock="Top" Height="52" Background="#202225">
                <Menu.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel HorizontalAlignment="Stretch"/>
                    </ItemsPanelTemplate>
                </Menu.ItemsPanel>
                <MenuItem Foreground="White" FontSize="22" Margin="7" Template="{DynamicResource MenuItemControlTemplate}" Background="#202225" Name="GroupSettingsMenuItem" Click="GroupSettingsMenuItem_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{DynamicResource TextBlockStyle1}">⚙️ Group settings</TextBlock>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Foreground="White" FontSize="22" Margin="7" Template="{DynamicResource MenuItemControlTemplate}" Name="CreateGroupMenuItem" Click="CreateGroupMenuItem_Click"  Background="#202225">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock  Style="{DynamicResource TextBlockStyle1}">🙍‍♂🙍‍♂️ Create group</TextBlock>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Foreground="White" FontSize="22" Margin="7" Template="{DynamicResource MenuItemControlTemplate}"  Background="#202225" Name="PlayMusicMenuItem" Click="PlayMusicMenuItem_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Name="PlayMusicTextBlock"  Style="{DynamicResource TextBlockStyle1}">🎵 Play music</TextBlock>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Foreground="White" FontSize="22" Margin="7" Template="{DynamicResource MenuItemControlTemplate}"  Background="#202225" Name="StopMusicMenuItem" Click="StopMusicMenuItem_Click">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Name="StopMusicTextBlock"  Style="{DynamicResource TextBlockStyle1}">⏹ Stop music</TextBlock>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Foreground="White" FontSize="22" Margin="7" HorizontalAlignment="Right" Name="SignOutMenuItem"  Background="#202225" Click="SignOutMenuItem_Click" Template="{DynamicResource MenuItemControlTemplate}">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="2,0,0,0"  Style="{DynamicResource TextBlockStyle1}">🚪 Sign out</TextBlock>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
            </Menu>

            <StackPanel DockPanel.Dock="Left" Width="310" Background="#25272A">
                <ListBox x:Name="ClientsListBox" BorderThickness="0" Width="310" Background="#2F3136" SelectionChanged="ClientsListBox_SelectionChanged" Height="585">
                    <!--<ListBoxItem Height="40" Style="{DynamicResource ClientsListBoxItemStyle}" IsSelected="True">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Images/avatar.jpg" Width="20"  Margin="5"/>
                        <TextBlock Foreground="White" FontSize="15" Margin="5">Piotr Sum</TextBlock>
                    </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{DynamicResource NewMessageListBoxTemplate}">
                        <StackPanel  Margin="15,0,0,0">
                            <Polygon Points="1,0 4.7,6 15,6" Stroke="#4095B4" Fill="#4095B4" Margin="0.6,0,0,-0.6"/>
                            <Border Margin="5,0,0,0" CornerRadius="0,3,3,3" Background="#4095B4">
                                <TextBlock Padding="2" FontSize="10" Foreground="White">Masz nową wiadomość!</TextBlock>
                            </Border>
                        </StackPanel>
                    </ListBoxItem>-->
                </ListBox>
                <StackPanel Margin="10 10 10 10" Orientation="Horizontal">
                    <Image Name="UserIconImage" Width="50" Source="/Avatars/user.png" />
                    <TextBlock Name="UsernameTextBlock" Margin="10 0 0 0" FontSize="35" Foreground="White" VerticalAlignment="Center" Width="180">You</TextBlock>
                    <Button Name="SettingsMenuItem" Click="SettingsMenuItem_Click" Foreground="White" Background="#25272A" FontSize="35" BorderThickness="0" Margin="5 0 0 0" Style="{DynamicResource SettingsButton}">
                        <TextBlock Style="{DynamicResource TextBlockStyle1}">⚙️</TextBlock>
                    </Button>
                </StackPanel>
            </StackPanel>

            <StackPanel Width="876" Height="670" Background="#46494F">
                <ListBox Margin="0,0,0,7" Height="585" Name="ConversationListBox"  Background="#46494F" BorderThickness="0">
                    <!--<ListBoxItem HorizontalAlignment="Left" MaxWidth="525">
                        <DockPanel>
                            <Image VerticalAlignment="top" Width="45" Source="/Avatars/user.png" Margin="5 5 5 0"/>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock VerticalAlignment="Bottom" FontSize="17" Margin="3 0 7 -1" Foreground="White">Kamil</TextBlock>
                                    <TextBlock VerticalAlignment="Bottom" FontSize="14" Foreground="#999B9F">07/04/2021 11:33</TextBlock>
                                </StackPanel>
                                <Border HorizontalAlignment="Left" Background="#595B5F" CornerRadius="0, 10, 10, 10" Margin="3">
                                    <TextBlock FontSize="20" Padding="7" Foreground="#D7D5D9" TextWrapping="Wrap">No już rok trzymam kanapkę w plecaku. Za chwilę będę musiał wynieść na dwór, bo ten grzyb tak rośnie, że już nie mieści mi się w pokoju
                                    </TextBlock>
                                </Border>
                            </StackPanel>
                        </DockPanel>
                    </ListBoxItem>
                    <ListBoxItem HorizontalAlignment="Right" MaxWidth="525">
                        <ListBoxItem.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete message" Click="DeleteMenuItem_Click"/>
                            </ContextMenu>
                        </ListBoxItem.ContextMenu>
                        <StackPanel>
                            <TextBlock Margin="0 0 5 0" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontSize="14" Foreground="#999B9F">07/04/2021 11:33</TextBlock>
                            <Border HorizontalAlignment="Right" Background="#595B5F" CornerRadius="10, 10, 0, 10" Margin="3">
                                <TextBlock FontSize="20" Padding="7" Foreground="#D7D5D9" TextWrapping="Wrap">hmm</TextBlock>
                            </Border>
                        </StackPanel>
                    </ListBoxItem>-->
                </ListBox>

                <Border Height="auto" BorderThickness="0" Width="855"  Background="#2F3136" CornerRadius="10">
                    <StackPanel Orientation="Horizontal">
                        <Grid Height="auto" Margin="0 15 0 15" Background="#2F3136">
                            <TextBlock Visibility="{Binding ElementName=MessageTextBox, Path=Text.IsEmpty, Converter={StaticResource VisibilityBooleanConverter}}" Margin="12 0 0 0" Foreground="#A7A5A9" Height="auto" FontSize="22">Write message</TextBlock>
                            <TextBox Name="MessageTextBox" MaxLines="1" TextWrapping="NoWrap" Margin="10 0 0 0" KeyDown="MessageTextBox_KeyDown" VerticalAlignment="Center" Height="auto" FontSize="22" Foreground="#D7D5D9" BorderThickness="0" Background="Transparent" Width="750"  HorizontalAlignment="Left"/>
                        </Grid>
                        <Button Name="SendMessageButton" BorderThickness="0" Background="#2F3136"  Width="75" Height="30" Margin="10 0 0 0" HorizontalAlignment="Right" Style="{DynamicResource ButtonStyle3}" Click="SendMessageButton_Click">
                            <TextBlock FontSize="22" Style="{DynamicResource SendTextBlockStyle}">Send</TextBlock>
                        </Button>
                    </StackPanel>
                </Border>
            </StackPanel>
        </DockPanel>
        <!--#endregion-->

        <!--#region new Group -->
        <StackPanel Name="GroupStackPanel" Background="#595B5F" Visibility="Collapsed" Height="750" Width="1200">
            <Button Click="GoBackButton_Click" Height="75" HorizontalAlignment="Left" Margin="15,15,0,0" BorderThickness="0" Background="#595B5F"  Style="{DynamicResource GoBackStyle}">
                <Image Source="/Images/go-back-icon.png"/>
            </Button>
            <Border Background="#2F3136" Height="525" CornerRadius="30" Width="750">
                <StackPanel Margin="15">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock Foreground="White" FontSize="30" Margin="15">Name new group:</TextBlock>
                        <Border Background="#494B4F" Width="375" Height="45" CornerRadius="7">
                            <TextBox Margin="3" Name="GroupNameTextBox" VerticalAlignment="Center" Height="30" FontSize="22" Background="#494B4F" Foreground="#D7D5D9" BorderThickness="0"/>
                        </Border>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Height="370">
                        <StackPanel Orientation="Vertical" Width="360">
                            <TextBlock Foreground="#D7D5D9" FontSize="22" Margin="15">Choose group members:</TextBlock>
                            <ListBox x:Name="ChooseFriendsListBox" Background="#494B4F" BorderThickness="0" Width="300" Height="345">

                            </ListBox>
                        </StackPanel>

                        <StackPanel  Orientation="Vertical" Width="360" >
                            <TextBlock Foreground="#D7D5D9" FontSize="22" Margin="15">Choose group icon:</TextBlock>
                        </StackPanel>
                    </StackPanel>

                    <Border Background="#D7D5D9"  Margin="15" CornerRadius="5" Width="300">
                        <Button Name="CreateGroupButtom" Foreground="White" Margin="3" BorderThickness="0" Click="CreateGroupButtom_Click" FontSize="22">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Foreground="#2F3136">Create: "</TextBlock>
                                <TextBlock Foreground="#2F3136" Text="{Binding ElementName=GroupNameTextBox, Path=Text}"/>
                                <TextBlock Foreground="#2F3136">"</TextBlock>
                            </StackPanel>
                        </Button>
                    </Border>
                </StackPanel>
            </Border>

            <Border Margin="0, 27, 0, 0" Width="1200" Name="GroupErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}" >
                <TextBlock Name="GroupErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->

        <!--#region Settings-->
        <StackPanel Name="SettingsStackPanel" Background="#2F3136" Visibility="Collapsed" Height="750" Width="1200">
            <Button Click="GoBackButton_Click" Height="75" HorizontalAlignment="Left" Margin="15,15,0,0" BorderThickness="0" Background="#2F3136"  Style="{DynamicResource GoBackStyle}">
                <Image Source="/Images/go-back-icon.png"/>
            </Button>
            <Border Background="#595B5F" Height="525" CornerRadius="30" Width="700">
                <StackPanel>
                    <TextBlock Margin="20" HorizontalAlignment="Center" FontSize="40" Foreground="White">Profile settings</TextBlock>

                    <StackPanel Margin="15" Orientation="Horizontal">
                        <TextBlock Margin="10 0 0 2" FontSize="30" Foreground="#D7D5D9">Login:</TextBlock>
                        <Border Margin="70 0 0 0" Height="35" Width="280" CornerRadius="5" Background="#2F3136">
                            <TextBox Width="270" HorizontalContentAlignment="Center" x:Name="SetLoginTextBox" Margin="3" FontSize="22" Foreground="#D7D5D9" BorderThickness="0"  Background="#2F3136"/>
                        </Border>
                        <Border Margin="100 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                            <Button x:Name="SetLoginButton" Click="SetLoginButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Set login</Button>
                        </Border>
                    </StackPanel>

                    <StackPanel Margin="15" Orientation="Horizontal">
                        <TextBlock Margin="10 0 0 2" FontSize="30" Foreground="#D7D5D9">Password:</TextBlock>
                        <Border Margin="20 0 0 0" Height="35" Width="280" CornerRadius="5" Background="#2F3136">
                            <PasswordBox Width="270" HorizontalContentAlignment="Center" x:Name="SetPasswordTextBox" Margin="3" FontSize="22" Foreground="#D7D5D9" BorderThickness="0"  Background="#2F3136"/>
                        </Border>
                        <Border Margin="100 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                            <Button x:Name="SetPasswordButton" Click="SetPasswordButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Set password</Button>
                        </Border>
                    </StackPanel>

                    <StackPanel Margin="15" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Margin="10 0 0 2" FontSize="30" Foreground="#D7D5D9">Icon:</TextBlock>
                        <Border Margin="20 0 0 0" Width="480" Height="265" CornerRadius="5" Background="#2F3136">
                            <WrapPanel Name="IconsWrapPanel" Orientation="Vertical" Margin="5">
                                <RadioButton Margin="3 10 0 6" Tag="user" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/user.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="user (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/user (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="user (2)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/user (2).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="user (3)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/user (3).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="astronaut" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/astronaut.png"/>
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="boy" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/boy.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="bride" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/bride.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="fashion-blogger" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/fashion-blogger.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="faun" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/faun.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="gamer (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/gamer (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="gamer (2)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/gamer (2).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="gamer" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/gamer.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="grandmother" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/grandmother.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="influencer" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/influencer.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="jesus" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/jesus.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man (2)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man (2).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man (3)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man (3).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man (4)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man (4).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man (5)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man (5).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="man" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/man.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="ninja" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/ninja.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="profile (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/profile (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="profile" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/profile.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="student" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/student.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="teenager" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/teenager.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="witch (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/witch (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="witch" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/witch.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman (1)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman (1).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman (2)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman (2).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman (3)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman (3).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman (4)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman (4).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman (5)" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman (5).png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="woman" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/woman.png" />
                                </RadioButton>
                                <RadioButton Margin="3 10 0 6" Tag="worker" GroupName="UserIcon">
                                    <Image Margin="-2 -9 0 0" Height="45" Source="/Avatars/worker.png" />
                                </RadioButton>
                            </WrapPanel>
                        </Border>
                        <Border Margin="20 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                            <Button x:Name="SetIcondButton" Click="SetIcondButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Set icon</Button>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Margin="0, 27, 0, 0" Width="1200" Name="SettingsErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}" >
                <TextBlock Name="SettingsErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->

        <!--#region Group settings-->
        <StackPanel Name="GroupSettingsStackPanel" Background="#2F3136" Visibility="Collapsed" Height="750" Width="1200">
            <Button Click="GoBackButton_Click" Height="75" HorizontalAlignment="Left" Margin="15,15,0,0" BorderThickness="0" Background="#2F3136"  Style="{DynamicResource GoBackStyle}">
                <Image Source="/Images/go-back-icon.png"/>
            </Button>
            <Border Background="#595B5F" Height="525" CornerRadius="30" Width="700">
                <StackPanel>
                    <TextBlock Margin="20" HorizontalAlignment="Center" FontSize="40" Foreground="White">Group settings</TextBlock>

                    <StackPanel Margin="15" Orientation="Horizontal">
                        <TextBlock Margin="10 0 0 2" FontSize="30" Foreground="#D7D5D9">Group name:</TextBlock>
                        <Border Margin="30 0 0 0" Height="35" Width="280" CornerRadius="5" Background="#2F3136">
                            <TextBox Name="NewGroupNameTextBox" Width="270" HorizontalContentAlignment="Center" Margin="3" FontSize="22" Foreground="#D7D5D9" BorderThickness="0"  Background="#2F3136"/>
                        </Border>
                        <Border Margin="70 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                            <Button Name="SetGroupNameButton" Click="SetGroupNameButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Set name</Button>
                        </Border>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <StackPanel HorizontalAlignment="Left" Orientation="Vertical" Width="360">
                            <TextBlock Foreground="#D7D5D9" FontSize="22" Margin="30 10 10 10">Delete members:</TextBlock>
                            <StackPanel Orientation="Horizontal" Width="360">
                                <ListBox x:Name="DeleteGroupMembersListBox" Background="#494B4F" BorderThickness="0" Width="200" Height="300" Margin="30 0 0 0" HorizontalAlignment="Left">

                                </ListBox>
                                <Border Margin="20 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                                    <Button Name="DeleteMembersButton" Click="DeleteMembersButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Delete</Button>
                                </Border>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel HorizontalAlignment="Right" Orientation="Vertical" Width="360">
                            <TextBlock Foreground="#D7D5D9" FontSize="22" Margin="30 10 10 10">Add friends:</TextBlock>
                            <StackPanel  Orientation="Horizontal" Width="360">
                                <ListBox x:Name="AddGroupMembersListBox" Background="#494B4F" BorderThickness="0" Width="200" Height="300" Margin="30 0 0 0" HorizontalAlignment="Left">

                                </ListBox>
                                <Border Margin="20 0 0 0" Height="35" CornerRadius="5" Background="#D7D5D9">
                                    <Button Name="AddMembersButton" Click="AddMembersButton_Click" FontWeight="Bold" Margin="2" Background="#D7D5D9" BorderThickness="0" Foreground="#333333" FontSize="16">Add</Button>
                                </Border>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Border>

            <Border Margin="0, 27, 0, 0" Width="1200" Name="GroupSettingsErrorBorder" Background="#202225"  HorizontalAlignment="Center" Visibility="Collapsed" Style="{DynamicResource BaseAnimationsStyle}" >
                <TextBlock Name="GroupSettingsErrorTextBlock" Padding="15" FontSize="30" HorizontalAlignment="Center" Foreground="#ef0000">❌ Error</TextBlock>
            </Border>
        </StackPanel>
        <!--#endregion-->
    </StackPanel>
</Window>
